@model Bilinguals.Areas.Admin.Models.UserViewModel

@{
    ViewBag.Title = "Create";
    Layout = "~/Areas/Admin/Views/Shared/_LayoutAdmin.cshtml";
}

<div class="container bg-white rounded-pill2 shadow-sm">

    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <h4 class="text-center pt-3">Create Account</h4>
            <hr />

            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

            <div class="form-group">
                <div class="row justify-content-center">
                    @Html.EditorFor(m => m.FirstName, new { htmlAttributes = new { @class = "form-control mb-3 rounded-pill1", placeholder = "Enter First Name", style = "max-width: 300px;" } })
                    @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                <div class="row justify-content-center">
                    @Html.EditorFor(m => m.LastName, new { htmlAttributes = new { @class = "form-control mb-3 rounded-pill1", placeholder = "Enter Last Name", style = "max-width: 300px;" } })
                    @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                <div class="row justify-content-center">
                    @Html.EditorFor(m => m.Email, new { htmlAttributes = new { @class = "form-control mb-3 rounded-pill1", placeholder = "Enter Email", style = "max-width: 300px;" } })
                    @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                <div class="row justify-content-center">
                    @Html.EditorFor(m => m.Password, new { htmlAttributes = new { @class = "form-control rounded-pill1", placeholder = "Enter Password", style = "max-width: 300px;" } })
                    @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                </div>
            </div>

            <br />
            <div class="form-group">
                <div class="container">
                    <div class="row justify-content-center">
                        @{
                            List<Bilinguals.Areas.Admin.Models.SelectRoleData> roles = ViewBag.Roles;
                            foreach (var role in roles)
                            {
                                <div class="form-check form-switch col-md-auto">
                                    <input class="form-check-input" type="checkbox" name="selectedRoles" value="@role.RoleId" @( Html.Raw(role.Selected ? "checked" : "") ) />
                                    <label class="form-check-label" for="flexSwitchCheckDefault">@role.Name</label>
                                </div>

                            }
                        }
                    </div>
                </div>
            </div>

            <div class="form-group py-4">
                <div class="col-md-offset-2 col-md-auto text-center">
                    <input type="submit" value="Create" class="btn btn-sm btn-custom1" />
                    @Html.ActionLink("Back to List", "Index", "", new { @class = "btn-sm btn btn-secondary", style = "text-decoration: none;" })
                </div>
            </div>
        </div>
    }

</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

