@model Bilinguals.Areas.Admin.Models.UserViewModel

@{
    ViewBag.Title = "Edit User Infomation";
    Layout = "~/Areas/Admin/Views/Shared/_LayoutAdmin.cshtml";
}

<div class="container bg-white rounded-pill2 shadow-sm">
    <h2 class="text-center pt-3">@ViewBag.Title</h2>
    <hr />
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal text-center">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.Id)
            @Html.HiddenFor(model => model.Password)

            <div class="form-group">
                @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="row justify-content-center">
                    @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control rounded-pill2 mb-3", style = "max-width: 300px;" } })
                    @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="row justify-content-center">
                    @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control rounded-pill2 mb-3", style = "max-width: 300px;" } })
                    @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                </div>
            </div>


            <div class="form-group">
                @Html.LabelFor(model => model.UserName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="row justify-content-center">
                    @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control rounded-pill2 mb-3", style = "max-width: 300px;" } })
                    @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="row justify-content-center">
                    @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control rounded-pill2 mb-3", style = "max-width: 300px;" } })
                    @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.DateOfBirth, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="row justify-content-center">
                    @Html.EditorFor(model => model.DateOfBirth, new { htmlAttributes = new { @class = "form-control rounded-pill2 mb-3", style = "max-width: 300px;" } })
                    @Html.ValidationMessageFor(model => model.DateOfBirth, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.PhoneNumber, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="row justify-content-center">
                    @Html.EditorFor(model => model.PhoneNumber, new { htmlAttributes = new { @class = "form-control rounded-pill2", style = "max-width: 300px;" } })
                    @Html.ValidationMessageFor(model => model.PhoneNumber, "", new { @class = "text-danger" })
                </div>
            </div>

            <br />
            <div class="form-group">
                <div class="container">
                    <div class="row  justify-content-center">
                        @{
                            List<Bilinguals.Areas.Admin.Models.SelectRoleData> roles = ViewBag.Roles;
                            foreach (var role in roles)
                            {
                                <div class="form-check form-switch col-md-auto">
                                    <input class="form-check-input" type="checkbox" name="selectedRoles" value="@role.RoleId" @( Html.Raw(role.Selected ? "checked" : "") ) />
                                    <label class="form-check-label" for="flexSwitchCheckDefault">@role.Name</label>
                                </div>
                            }
                        }
                    </div>
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-auto pt-3 pb-4">
                    <input type="submit" value="Save" class="btn btn-custom1 btn-sm me-2" />
                    @Html.ActionLink("Back to List", "Index", "", new { @class = "btn-sm btn btn-secondary", style = "text-decoration: none;" })
                </div>
            </div>
        </div>
    }
</div>


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}







