@model Bilinguals.Models.IndexViewModel
@using Microsoft.AspNet.Identity
@{
    ViewBag.Title = "Profile";
}
<link href="~/Content/css/alert1.css" rel="stylesheet" />
<div class="row gx-5">
    <p class="text-success">@ViewBag.StatusMessage</p>

    <section class="rounded-pill" style="background-color: #e9e9ff;">
        <div class="py-5">
            <div class="row">
                <div class="col-lg-4">
                    <div class="card mb-4 rounded-pill">
                        <div class="card-body text-center">
                            <div>
                                <img src=" ~/Avatars/@(!Model.ImageId.HasValue ? "defaultAvatar.jpg" : Model.image.ImagePath )" alt="avatar" class="rounded-circle img-fluid avatar" style="max-width: 150px;max-height: 150px;">
                                <a data-imageid="@Model.ImageId" class="btn position-absolute avatarbtn" data-bs-toggle="modal" data-bs-target="#bsModal"><i class="bi bi-person-bounding-box"></i></a>
                                <a @(!Model.ImageId.HasValue ? "hidden" : "") data-imageid="@Model.ImageId" class="btn position-absolute avatarremove mt-5" data-bs-toggle="modal" data-bs-target="#bsModalRemove"><i class="bi bi-trash-fill"></i></a>
                            </div>
                            <h5 class="my-3">@Model.FullName</h5>
                            <div class="d-flex justify-content-center mb-2">
                                <button type="button" class="btn btn-outline-primary btn-outline-custom2 rounded-pill1">
                                    @if (Model.HasPassword)
                                    {
                                        @Html.ActionLink("Change Password", "ChangePassword", routeValues: null, htmlAttributes: new { style = "color: inherit; text-decoration: none;" })
                                    }
                                    else
                                    {
                                        @Html.ActionLink("Create", "SetPassword", routeValues: null, htmlAttributes: new { style = "color: inherit; text-decoration: none;" })
                                    }
                                </button>
                                <a href="/manage/edit/@User.Identity.GetUserId()" type="button" class="btn btn-outline-custom2 rounded-pill1 ms-1">Edit Info</a>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-lg-8">
                    <div class="card mb-4 rounded-pill">
                        <div class="card-body">
                            <div class="row">
                                <div class="col-sm-3">
                                    <p class="mb-0">User Name</p>
                                </div>
                                <div class="col-sm-9">
                                    <p class="text-muted mb-0">@Model.UserName</p>
                                </div>
                            </div>
                            <hr>
                            <div class="row">
                                <div class="col-sm-3">
                                    <p class="mb-0">First Name</p>
                                </div>
                                <div class="col-sm-9">
                                    <p class="text-muted mb-0">@Model.FirstName</p>
                                </div>
                            </div>
                            <hr>
                            <div class="row">
                                <div class="col-sm-3">
                                    <p class="mb-0">Last Name</p>
                                </div>
                                <div class="col-sm-9">
                                    <p class="text-muted mb-0">@Model.LastName</p>
                                </div>
                            </div>
                            <hr>
                            <div class="row">
                                <div class="col-sm-3">
                                    <p class="mb-0">Email</p>
                                </div>
                                <div class="col-sm-9">
                                    <p class="text-muted mb-0">@Model.Email</p>
                                </div>
                            </div>
                            <hr>
                            <div class="row">
                                <div class="col-sm-3">
                                    <p class="mb-0">Phone</p>
                                </div>
                                <div class="col-sm-9">
                                    <p class="text-muted mb-0">@Model.PhoneNumber</p>
                                </div>
                            </div>
                            <hr>
                            <div class="row">
                                <div class="col-sm-3">
                                    <p class="mb-0">Date Of Birth</p>
                                </div>
                                <div class="col-sm-9">
                                    <p class="text-muted mb-0">@(Model.DateOfBirth?.ToString("dd/MM/yyyy"))</p>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </section>
</div>

<!-- Modal -->
<div class="modal fade" id="bsModal" tabindex="-1">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content"></div>
    </div>
</div>

<div class="modal fade" id="bsModalRemove" tabindex="-1">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content"></div>
    </div>
</div>

<div id="pageMessages">

</div>


<!--<div>
    <h4>Change your account settings</h4>
    <hr />
    <dl class="dl-horizontal">
        <dt>External Logins:</dt>
        <dd>
            @Model.Logins.Count [
            @Html.ActionLink("Manage", "ManageLogins") ]
        </dd>-->
@*
    Phone Numbers can used as a second factor of verification in a two-factor authentication system.

     See <a href="https://go.microsoft.com/fwlink/?LinkId=403804">this article</a>
        for details on setting up this ASP.NET application to support two-factor authentication using SMS.

     Uncomment the following block after you have set up two-factor authentication
*@
@*
    <dt>Phone Number:</dt>
    <dd>
        @(Model.PhoneNumber ?? "None")
        @if (Model.PhoneNumber != null)
        {
            <br />
            <text>[&nbsp;&nbsp;@Html.ActionLink("Change", "AddPhoneNumber")&nbsp;&nbsp;]</text>
            using (Html.BeginForm("RemovePhoneNumber", "Manage", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
            {
                @Html.AntiForgeryToken()
                <text>[<input type="submit" value="Remove" class="btn-link" />]</text>
            }
        }
        else
        {
            <text>[&nbsp;&nbsp;@Html.ActionLink("Add", "AddPhoneNumber")
        }
    </dd>
*@
<!--<dt>Two-Factor Authentication:</dt>
<dd>
    <p>
        There are no two-factor authentication providers configured. See <a href="https://go.microsoft.com/fwlink/?LinkId=403804">this article</a>
        for details on setting up this ASP.NET application to support two-factor authentication.
    </p>-->
@*@if (Model.TwoFactor)
    {
        using (Html.BeginForm("DisableTwoFactorAuthentication", "Manage", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
        {
            @Html.AntiForgeryToken()
            <text>Enabled
            <input type="submit" value="Disable" class="btn btn-link" />
            </text>
        }
    }
    else
    {
        using (Html.BeginForm("EnableTwoFactorAuthentication", "Manage", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
        {
            @Html.AntiForgeryToken()
            <text>Disabled
            <input type="submit" value="Enable" class="btn btn-link" />
            </text>
        }
    }*@
<!--</dd>
    </dl>
</div>-->

@section scripts{
    <script src="~/Scripts/jquery.form.js"></script>
    <script src="~/Scripts/Components/alert1.js"></script>
    <script src="~/Scripts/Components/update-image.js"></script>
    <script type="text/javascript">
        var Main = (function () {
            return {
                init: function () {
                    bsModal.init(() => { bsModal.setState() }, (newImage) => {
                        //update ui image
                        $('.avatar').removeAttr('src').attr('src', `\/Avatars/${newImage.path}`);
                        $('.avatarbtn').attr('data-imageid', newImage.id);
                        setUrl();
                        $('.avatarremove').removeAttr('hidden');
                        $('#avatarmini').remove();
                        $('#avatardefault').remove();
                        $('#avatarnavbar').append(`<span id="avatarmini"><img src="\/Avatars/${newImage.path}" alt="" width="32" height="32" class="rounded-circle me-2 border border-2"></span>`);
                        createAlert('', '', 'Update Successfully!', 'success', false, true, 'pageMessages');
                    });
                    bsModalRemove.init(() => { bsModalRemove.setState() }, (data) => {
                        //update ui image
                        $('.avatar').removeAttr('src').attr('src', '\/Avatars/defaultAvatar.jpg');
                        $('.avatarbtn').attr('data-imageid', '');
                        $('.avatarremove').attr('hidden', '');
                        $('#avatarmini').remove();
                        $('#avatarnavbar').append(`<span id="avatardefault"><i style=" font-size: 18px;" class="bi bi-person-fill mx-1"></i></span>`);
                        createAlert('', '', 'Remove Successfully!', 'warning', false, true, 'pageMessages');
                    });
                },
            }
        })();

        $(function () {
            Main.init();
        });
    </script>
}
