@model Bilinguals.Domain.Models.Dialog

@{
    ViewBag.Title = "Details";
    var returnUrl = Request.QueryString["returnUrl"];
}

<h2>Details</h2>

@*<button type="button" class="btn btn-warning btn-sm" data-bs-toggle="modal" data-bs-target="#bsModal">
    <span class="bi bi-pencil-square"></span>
</button>*@

<div>
    <h4>Dialog</h4>
    <hr />
    <dl class="dl-horizontal">
        <dt>
            @Html.DisplayNameFor(model => model.Name)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Name)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.DateCreated)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.DateCreated)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.DateModified)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.DateModified)
        </dd>

    </dl>
</div>
<p>
    @Html.ActionLink("Edit", "Edit", new { id = Model.Id }) |
    @Html.ActionLink("Back to List", "Index")
</p>

<h3> Sentences </h3>

<table class="table table-bordered">
    @foreach (var item in Model.Sentences)  //Bug: Object reference not set to an instance of an object => add virtual to navigation properties in Model
    {
        <tr>
            <td> @item.EnText </td>
            <td> @item.ViText </td>
            <td>
                <div class="btn-group dropstart">
                    <button type="button" data-sentenceid="@item.Id" data-usersentenceid="@item.UserSentenceId" class="btn btn-select btn-@(!item.UserSentenceId.HasValue ? "outline-primary" : "primary") btn-sm dropdown-toggle" data-bs-toggle="dropdown" aria-expanded="false">
                        <span class="bi bi-@(!item.UserSentenceId.HasValue ? "bookmark-plus":"bookmark-check")"></span> <span id="gn">@item.GroupName</span>
                    </button>
                    <ul class="dropdown-menu savedropdown" aria-labelledby="dropdownMenuSave">
                        <li><a href="#" class="dropdown-item create" data-bs-toggle="modal" data-bs-target="#bsModal">Add to new list</a></li>
                        <li><a class="dropdown-item remove" href="#">Remove</a></li>
                        <li><hr class="dropdown-divider"></li>
                    </ul>
                </div>
            </td>
        </tr>
    }
</table>

<!-- Modal -->
<div class="modal fade" id="bsModal" tabindex="-1">
    <div class="modal-dialog modal-sm" role="document">
        <div class="modal-content"></div>
    </div>
</div>

@section scripts {
    <script src="~/Scripts/jquery.form.js"></script>
    <script src="~/Scripts/Components/dropdown-sentence.js"></script>
    <script type="text/javascript">
        var Main = (function () {
            return {
                init: function () {
                    bsModal.init(() => { bsModal.setState() }, (newGroup) => {
                        //change ui dropdown
                        getUserGroups();
                    });
                    getUserGroups();
                    handleSaveRemove();
                },
            }
        })();

        $(function () {
            Main.init();
        });
    </script>
}
